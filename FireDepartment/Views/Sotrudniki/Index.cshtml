@model IEnumerable<FireDepartment.Models.Sotrudniki>
@using Microsoft.AspNetCore.Http.Extensions

@{
    ViewData["Title"] = "Index";
    var queryString = ViewContext.HttpContext.Request.Query;
    var searchString = queryString["searchString"].ToString();
}

<h1>Список сотрудников</h1>

@if (this.Context.User.IsInRole("admin"))
{
    <p>
        <a class="btn btn-primary" asp-action="Create">Добавить сотрудника</a>
    </p>
}

@if (!string.IsNullOrWhiteSpace(searchString))
{
    <p>Текущий фильтр: <strong>Поиск - @searchString</strong></p>
}

<form asp-action="Search" method="post">
    <div class="mb-2 form-group narrow-form">
        <label for="searchString">Поиск:</label>
        <input type="text" class="form-control" name="searchString" placeholder="Введите текст для поиска">
    </div>
    <button type="submit" class="mb-2 btn btn-primary">Поиск</button>
    <a href="@Url.Action("Index")" class="mb-2 btn btn-secondary">Сбросить</a>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rank)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Specialization)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOfReceipt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rank)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Specialization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfReceipt)
            </td>
            <td>
                    <a class="btn btn-primary btn-sm" asp-action="Details" asp-route-id="@item.Id">Подробнее</a>
                    @if (this.Context.User.IsInRole("admin"))
                    {
                        <a class="btn btn-success btn-sm" asp-action="Edit" asp-route-id="@item.Id">Редактировать</a>
                        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                    }
                <button type="button" class="btn btn-light btn-sm" onclick="showExperience('@item.Id')">Показать стаж</button>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <script>
        function showExperience(sotrudnikId) {
            fetch('/Sotrudniki/CalculateSotrudnikExperience/' + sotrudnikId)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Стаж сотрудника: ' + data.experienceYears + ' лет');
                    } else {
                        alert('Не удалось получить стаж сотрудника.');
                    }
                });
        }
    </script>
}