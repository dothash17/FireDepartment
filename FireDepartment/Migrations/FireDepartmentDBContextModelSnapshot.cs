// <auto-generated />
using System;
using FireDepartment.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FireDepartment.Migrations
{
    [DbContext(typeof(FireDepartmentDBContext))]
    partial class FireDepartmentDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FireDepartment.Models.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DateTimeCall")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SotrudnikId")
                        .HasColumnType("int")
                        .HasColumnName("SotrudnikID");

                    b.HasKey("Id");

                    b.HasIndex("SotrudnikId");

                    b.HasIndex(new[] { "Id" }, "IX_CallID");

                    b.ToTable("Call", (string)null);
                });

            modelBuilder.Entity("FireDepartment.Models.CallOborudovaniye", b =>
                {
                    b.Property<int>("CallId")
                        .HasColumnType("int")
                        .HasColumnName("CallID");

                    b.Property<int>("OborudovaniyeId")
                        .HasColumnType("int")
                        .HasColumnName("OborudovaniyeID");

                    b.HasKey("CallId", "OborudovaniyeId");

                    b.HasIndex(new[] { "OborudovaniyeId" }, "IX_CallOborudovaniye_OborudovaniyeID");

                    b.ToTable("CallOborudovaniye", (string)null);
                });

            modelBuilder.Entity("FireDepartment.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("OborudovaniyeId")
                        .HasColumnType("int")
                        .HasColumnName("OborudovaniyeID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OborudovaniyeId");

                    b.HasIndex(new[] { "Id" }, "IX_InventoryID");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("FireDepartment.Models.Oborudovaniye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTimeOfService")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_OborudovaniyeID");

                    b.ToTable("Oborudovaniye", (string)null);
                });

            modelBuilder.Entity("FireDepartment.Models.PreventionEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("SotrudnikId")
                        .HasColumnType("int")
                        .HasColumnName("SotrudnikID");

                    b.HasKey("Id");

                    b.HasIndex("SotrudnikId");

                    b.HasIndex(new[] { "Id" }, "IX_PreventionEventID");

                    b.ToTable("PreventionEvent", (string)null);
                });

            modelBuilder.Entity("FireDepartment.Models.Sotrudniki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfReceipt")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Phone_number");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_SotrudnikiID");

                    b.ToTable("Sotrudniki", (string)null);
                });

            modelBuilder.Entity("FireDepartment.Models.Call", b =>
                {
                    b.HasOne("FireDepartment.Models.Sotrudniki", "Sotrudnik")
                        .WithMany("Calls")
                        .HasForeignKey("SotrudnikId")
                        .IsRequired()
                        .HasConstraintName("FK_Call_Sotrudniki");

                    b.Navigation("Sotrudnik");
                });

            modelBuilder.Entity("FireDepartment.Models.CallOborudovaniye", b =>
                {
                    b.HasOne("FireDepartment.Models.Call", "Call")
                        .WithMany("CallOborudovaniye")
                        .HasForeignKey("CallId")
                        .IsRequired()
                        .HasConstraintName("FK_CallOborudovaniye_Call");

                    b.HasOne("FireDepartment.Models.Oborudovaniye", "Oborudovaniye")
                        .WithMany("CallOborudovaniye")
                        .HasForeignKey("OborudovaniyeId")
                        .IsRequired()
                        .HasConstraintName("FK_CallOborudovaniye_Oborudovaniye");

                    b.Navigation("Call");

                    b.Navigation("Oborudovaniye");
                });

            modelBuilder.Entity("FireDepartment.Models.Inventory", b =>
                {
                    b.HasOne("FireDepartment.Models.Oborudovaniye", "Oborudovaniye")
                        .WithMany("Inventory")
                        .HasForeignKey("OborudovaniyeId")
                        .IsRequired()
                        .HasConstraintName("FK_Inventory_Oborudovaniye");

                    b.Navigation("Oborudovaniye");
                });

            modelBuilder.Entity("FireDepartment.Models.PreventionEvent", b =>
                {
                    b.HasOne("FireDepartment.Models.Sotrudniki", "Sotrudnik")
                        .WithMany("PreventionEvents")
                        .HasForeignKey("SotrudnikId")
                        .IsRequired()
                        .HasConstraintName("FK_PreventionEvent_Sotrudniki");

                    b.Navigation("Sotrudnik");
                });

            modelBuilder.Entity("FireDepartment.Models.Call", b =>
                {
                    b.Navigation("CallOborudovaniye");
                });

            modelBuilder.Entity("FireDepartment.Models.Oborudovaniye", b =>
                {
                    b.Navigation("CallOborudovaniye");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("FireDepartment.Models.Sotrudniki", b =>
                {
                    b.Navigation("Calls");

                    b.Navigation("PreventionEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
